[{"title":"vue.js开发环境的搭建","date":"2017-03-04T04:36:14.000Z","path":"2017/03/04/vue/","text":"搭建vue环境前需要安装node与gitnode: http://nodejs.cn/download/git: https://git-for-windows.github.io/ 打开git bash全局安装vue-cli这里我们将 npm的注册表源设置为淘宝镜像来提升安装速度1npm install -g cnpm --registry=https://registry.npm.taobao.org 全局安装 vue-cli1$ cnpm install --global vue-cli 定位到放置项目的位置，创建一个基于 webpack 模板的新项目12$ cd D:/project/vue$ vue init webpack myproject 安装依赖12$ cd myproject$ npm install 安装完毕在项目文件夹下可以看到如下目录结构 让项目跑起来~1$ npm run dev 或者在浏览器中输入：localhost:8080 搭建成功则显示如下页面：","tags":[{"name":"vue","slug":"vue","permalink":"http://blog.qianxiaoduan.com/tags/vue/"}]},{"title":"将hexo博客同步托管到coding","date":"2017-02-17T01:33:37.000Z","path":"2017/02/17/coding/","text":"之前我们把hexo托管在github，但是毕竟github是国外的，访问速度得不到保证，还有一点因为百度联盟广告脚本被插入攻击github导致github禁止百度爬虫，所以百度的收录也有问题，因此在国内的托管平台部署一份也很重要，权衡之下决定部署到coding。 coding注册 创建项目在coding上注册账号并创建项目,项目名称需要与账户名称一致,否则可能因为路径错误使一些资源如样式等加载失败。 配置修改需要把blog同时部署到github与coding需要在根目录_config.yml中做出如下修改：123456deploy: type: git repo: github: http://github.com/bin248163/bin248163.github.io.git coding: http://git.coding.net/bin248163/bin248163.gitbranch: master 注意代码中的空格 公钥设置与github公钥添加过程相同，在本地找到.ssh文件，复制文件内容到如下位置： 在git bash中执行：1ssh -T git@git.coding.net 结果如下则表示添加成功：1Hello bin248163! You&apos;ve connected to Coding.net via SSH successfully! 创建Github Pages和Coding Pages 服务GitHub Pages分两种，一种是你的GitHub用户名建立的username.github.io这样的用户&amp;组织页（站），另一种是依附项目的pages。想建立个人博客是用的第一种，形如bin248163.github.io这样的可访问的站，每个用户名下面只能建立一个。 在项目中选择左侧代码再点击Coding Pages 服务开启。分支和github分支写一样，填写master blog上传1hexo d -g 添加自定义域名域名管理面板中添加 CNAME记录解析到pages.coding.me，然后，在「Pages 服务」设置页中的自定义域名栏目输入绑定的域名，点击「保存」即可通过自定义域名访问您的网站。","tags":[{"name":"hexo","slug":"hexo","permalink":"http://blog.qianxiaoduan.com/tags/hexo/"}]},{"title":"实现基于javascript的页面加载loading动画","date":"2017-02-15T03:52:14.000Z","path":"2017/02/15/loading/","text":"页面loading动画能够更好的反应当前网页的加载进度情况，动画的形式从开始0%到100%完成网页加载这一过程可以给用户一个温馨的提示，用户体验很不错。 loading动画的制作非常容易，难点在于如何判断当前页面的加载进度，目前没有方法可以直接获取正在加载对象的大小。所以我们无法通过数据大小来实现0-100%的加载显示过程。 我们知道当页面加载时html代码是逐行进行加载的，因此我们可以通过这个特性来间接达到效果。 首先我们需要定义一个页面的加载动画：12@mixin hover($value:.2s)&#123;-webkit-transition: all $value;-o-transition: all $value;-moz-transition: all $value;transition: all $value;&#125;.loading&#123;width: 0;height: 2px;background: #f00;position: absolute;top: 0;left: 0;@include:hover(1s);&#125; 然后根据实际情况将当前页面分成若干份，然后插入相关节点如下：12345678910111213&lt;div class=&quot;div1&quot;&gt;&lt;/div&gt;&lt;script&gt;$(&apos;.loading&apos;).animate(&#123;&apos;width&apos;:&apos;20%&apos;&#125;);&lt;/script&gt;&lt;div class=&quot;div2&quot;&gt;&lt;/div&gt;&lt;script&gt;$(&apos;.loading&apos;).animate(&#123;&apos;width&apos;:&apos;40%&apos;&#125;);&lt;/script&gt;&lt;div class=&quot;div3&quot;&gt;&lt;/div&gt;&lt;script&gt;$(&apos;.loading&apos;).animate(&#123;&apos;width&apos;:&apos;60%&apos;&#125;);&lt;/script&gt; ... 最后在页面的最底部让loading动画达到100%并隐藏动画即可：123&lt;script&gt;$(&apos;.loading&apos;).animate(&#123;&apos;width&apos;:&apos;100%&apos;&#125;).fadeOut();&lt;/script&gt;","tags":[{"name":"javascript","slug":"javascript","permalink":"http://blog.qianxiaoduan.com/tags/javascript/"}]},{"title":"如何搭建一个基于wordpress的个人博客","date":"2017-02-15T03:42:40.000Z","path":"2017/02/15/wordpress/","text":"前期投入1.注册域名域名选择 域名后缀常用的有.com,.net,.org，当然也可以选择一些比较个性的如.top等，.com域名的均价为每年￥50左右。注意.cn域名属于国家域名，由CNNIC管理，中国互联网络管理中心 （China Internet Network Information Center） 即CNNIC负责管理，因此不建议注册.cn域名。 域名注册机构国内的有阿里（万网）、易名中国、西部数码、35互联等，国外的有Godaddy、Name等。 域名注册流程 首先通过域名注册商查询想要的域名是否已被注册，如未被注册购买即可，另外别忘记及时给域名续费~ 2.空间主机购买主机的时候需考虑自己的域名是不是需要备案，域名未备案是不能使用大陆的主机的，可以使用国外或者香港的主机，如需备案可以选择国内的主机，阿里、百度、腾讯都是可以的。 3.wordpress博客系统wordpress博客系统下载地址：China 简体中文 — WordPress官网 博客搭建1.域名解析域名解析，就是把域名指向空间的IP，让我们能够通过域名访问网站空间。 进入申请域名的服务商网站，登录到自己的账号进入管理中心，点击进入域名管理。在域名列表上对域名进行解析操作。 选择添加解析，常用的解析方式有两种：A记录和CNAME记录，A记录对应记录值为服务器IP，CNAME记录对应值为空间域名，考虑到空间商对空间维护强烈建议使用CNAME记录解析，维护时有可能会换掉你空间对应的IP（大坑~）。 主机记录即域名前缀，常用如下（百度为例）： www：解析后域名为 www.baidu.com @：直接解析主域名 baidu.com ：泛解析，匹配其他所有域名 .baidu.com 2.wordpress的安装1.通过ftp工具将下载好的wordpress程序上传到服务器上，ftp工具下载：百度8uftp即可~ 上传地址：空间对应IP或者域名，用户名、密码、端口这些在空间管理后台都可以找到，在左边选择本地需要上传的文件，右边选择文件需要上传的目录。可以选择先解压再上传也可以选择先上传压缩包再通过空间后台解压工具进行解压，后者会相对好点（我一般用前面的^_^方便嘛）。 2.上传完毕后在浏览器输入你的域名，如果上传没什么问题的话显示的界面应该是这个： 选择现在就开始： 填入主机上需要使用的数据库名，以及用户名、密码，数据库主机一般为默认，表前缀可以默认，如果数据库中有wp前缀建议修改该处为其他的如wr、ab_等，填写完毕选择提交。 数据库连接成功界面： 选择进行安装 设置站点标题、用户名、密码以及电子邮件，用户名、密码即站点后台登录账号、密码，电子邮件用来找回密码、接收留言等，设置完成后选择安装woedpress。 安装完成后登录即可进入后台管理界面： 至此，wordpress就安装完成了，现在网站的页面还是默认的比较简陋，后面我们可以挑选一些漂亮的主题进行安装。","tags":[{"name":"wordpress","slug":"wordpress","permalink":"http://blog.qianxiaoduan.com/tags/wordpress/"}]},{"title":"使用padding/margin的百分比值实现图片固定高度自适应","date":"2017-02-15T03:20:09.000Z","path":"2017/02/15/padding/","text":"在使用css的padding/margin属性时，有一个值可能是我们没有注意到的 就是当padding/margin值的单位为百分比的值时，它的top/right/bottom/left都是基于父元素的宽度的，这可能与我们想的不太一样~ 利用这点我们可以做一些有趣的东西： 比如说做一个长宽相等图片列表，在pc端我们只需要给图片固定的宽度高度就可以轻松实现，但在移动端使用px和百分比布局就不能这样做了（rem布局可以很轻松的实现[入口]），移动端图片列表因为考虑到不同设备兼容的问题，所有大都选择宽度为百分比的布局方式，但这样的话图片的高度就没法设置，如果使用图片自身高度撑起容器高度的办法，在页面加载时图片没有加载出来的那段时间图片是不能撑起容器高度的。 解决办法： 当元素padding/margin值的单位为百分比的值时，它的top/right/bottom/left都是基于父元素的宽度的，而元素的百分比宽度也是基于父元素宽度的，这样就有思路了：12345div &#123; padding-top:20%; width:20%; background:#f00;&#125; 运行结果如下： 虽然div的高度为0，但因为有padding-top的原因在我们看来这还是一个宽高相等的div。 接下来我们要做的就是往元素中添加图片， 该元素的高度为0，我们不能直接在里面插入图片，需要用到定位的方式：12345678910111213div &#123; padding-top:20%; width:20%; background:#f00; position:relative; overflow:hidden;&#125;img&#123; width:100%; top:0; left:0; position:absolute;&#125; 效果如下： 宽高不一致的图片列表同理","tags":[{"name":"css","slug":"css","permalink":"http://blog.qianxiaoduan.com/tags/css/"}]},{"title":"页面显示 500 – 内部服务器错误。 您查找的资源存在问题,因而无法显示。问题的解决办法","date":"2017-02-15T03:19:47.000Z","path":"2017/02/15/500error/","text":"最近在将一个asp网站上传到二级目录下访问时显示如下错误： 百度了下出现上述问题的原因为在页面中使用../表示父目录而iis父目录默认是不开启的，因此需iis中启用父目录即可： 再iis中的功能视图模式下打开asp，选择启用父路径","tags":[{"name":"前端开发","slug":"前端开发","permalink":"http://blog.qianxiaoduan.com/tags/前端开发/"}]},{"title":"push本地代码到github出错的解决办法","date":"2017-02-15T03:19:37.000Z","path":"2017/02/15/push/","text":"创建的github版本库，在push代码时出现如下错误：12345678 To github.com:***/***.git ! [rejected] master -&gt; master (fetch first)error: failed to push some refs to &apos;git@github.com:***/***.git&apos;hint: Updates were rejected because the remote contains work that you dohint: not have locally. This is usually caused by another repository pushinghint: to the same ref. You may want to first integrate the remote changeshint: (e.g., &apos;git pull ...&apos;) before pushing again.hint: See the &apos;Note about fast-forwards&apos; in &apos;git push --help&apos; for details. 出现上面错误的原因是因为远程repository和本地的repository冲突导致的，在创建版本库后，在github的版本库页面点击了创建README.md文件的按钮创建了说明文档，但是却没有pull到本地。这样就产生了版本冲突的问题。 解决方法如下： 1.使用强制push的方法：1$ git push -u origin master -f 这样做会使远程文件丢失，一般不可取。 2.push前先将远程repository修改pull下来12$ git pull origin master$ git push -u origin master 3.若不想merge远程和本地修改，可以先创建新的分支：1$ git branch [name] 然后push1$ git push -u origin [name]","tags":[{"name":"git","slug":"git","permalink":"http://blog.qianxiaoduan.com/tags/git/"}]},{"title":"CSS3新增属性calc()","date":"2017-02-15T03:19:31.000Z","path":"2017/02/15/calc/","text":"calc()是什么？calc是英文单词calculate(计算)的缩写，是css3的一个新增的功能，用来指定元素的长度。它可以让你使用一个算术表达式来表达长度值，这意味着可以用它来定义div的宽度，并设置margin、padding、border等。 calc()能做什么？ calc()可以用来给元素做计算，例如“width:calc(50% + 20px)”，这样一来你就不用考虑元素的宽度值到底是多少，而是通过计算机来计算。 calc()的运算规则 使用”+”、”-”、”*”、”/”四则运算 可以使用百分比、px、em、rem等单位 可以混合使用各种单位进行计算。 表达式中有“+”和“-”时，其前后必须要有空格，如”widht: calc(50%+20px)”这种没有空格的写法是错误的 表达式中有“*”和“/”时，其前后可以没有空格 浏览器兼容性 pc端主流浏览器支持性较好，移动端UC浏览器不支持。","tags":[{"name":"css","slug":"css","permalink":"http://blog.qianxiaoduan.com/tags/css/"}]},{"title":"使用CSS、JQuery对input checkbox和radio样式美化","date":"2017-02-15T03:19:22.000Z","path":"2017/02/15/radio/","text":"方法的实现原理为把input按钮的透明度设置为0，然后在外层用div包裹，通过使用js对外层div添加样式来模拟按钮选中状态。 html代码：1&lt;div class=&quot;check-w&quot;&gt;&lt;input type=&quot;radio&quot; name=&quot;check&quot; class=&quot;check&quot;/&gt;&lt;/div&gt; css代码：123.check-w &#123;width: 24px;height: 18px;cursor: pointer;text-align: center;background-image: url(../images/check1.png);background-repeat: no-repeat;background-position: 0 -1px;&#125;.check &#123;opacity: 0;display:block;cursor: pointer;filter: alpha(opacity=0);&#125;.this &#123;background-position: 0 -22px;&#125; 在radio中，选框为单选框，即在多个选项中只能选择一个，因此只需要在为一个radio外层添加样式的同时移除其它radio外层div样式即可。 js代码如下：123$(&quot;.check-w&quot;).click(function()&#123; $(this).addClass(&quot;this&quot;).siblings().removeClass(&quot;this&quot;);&#125;) 在checkbox中，选框为多选，即可以同时选择多个选项，因此只需要为同一个checkbox第一次次点击的时候添加样式，第二次点击时移除样式即可。 js代码如下： JQ1.9以上版本移除了toggle事件因此可以使用如下方式123456789var flag=1; $(&quot;.check-w&quot;).click(function()&#123; if(flag==1)&#123; $(this).addClass(&quot;this&quot;); flag=0; &#125;else&#123; $(this).removeClass(&quot;this&quot;); flag=1; &#125; 也可以使用JQ1.9以下版本123$(&quot;.check-w&quot;).click(function()&#123; $(this).toggleClass( &quot;this&quot; );&#125;) 背景图片：","tags":[{"name":"css","slug":"css","permalink":"http://blog.qianxiaoduan.com/tags/css/"},{"name":"jquery","slug":"jquery","permalink":"http://blog.qianxiaoduan.com/tags/jquery/"}]},{"title":"JQuery在IE下 attr 对src取值的问题","date":"2017-02-15T03:19:14.000Z","path":"2017/02/15/attr/","text":"JQuery的写法123456$(&apos;.videoA&apos;).click(function() &#123; var spUrl = $(this).attr(&quot;href&quot;); $(&apos;.video object&apos;).attr(&quot;date&quot;,spUrl); $(&apos;.video-w&apos;).show(); return false; &#125;); 需兼容IE则可以不用attr，而使用.html替换整个div内部的内容1234567$(&apos;.videoA&apos;).click(function() &#123; var spUrl = $(this).attr(&quot;href&quot;); var object_str=&apos;&lt;object data=&quot;&apos;+spUrl+&apos;&quot; style=&quot;width: 100%;height: 100%;display: block;&quot; /&gt;&apos;; $(&apos;.video&apos;).html(object_str); $(&apos;.video-w&apos;).show(); return false; &#125;);","tags":[{"name":"javascript","slug":"javascript","permalink":"http://blog.qianxiaoduan.com/tags/javascript/"}]},{"title":"使用CSS修改HTML5 input placeholder颜色的实现","date":"2017-02-15T03:03:14.000Z","path":"2017/02/15/input/","text":"1234567891011121314::-webkit-input-placeholder &#123; /* WebKit browsers */ color: #fff;&#125;:-moz-placeholder &#123; /* Mozilla Firefox 4 to 18 */ color: #fff; opacity: 1;&#125;::-moz-placeholder &#123; /* Mozilla Firefox 19+ */ color: #fff; opacity: 1;&#125;:-ms-input-placeholder &#123; /* Internet Explorer 10+ */ color: #fff;&#125; (可在冒号前面添加类选择器) 单冒号(:)用于CSS3伪类，双冒号(::)用于CSS3伪元素。 css伪类：CSS 伪类用于向某些选择器添加特殊的效果。 css伪元素：CSS 伪元素用于向某些选择器设置特殊效果。 伪元素由双冒号和伪元素名称组成。双冒号是在当前规范中引入的，用于区分伪类和伪元素。但是伪类兼容现存样式，浏览器需要同时支持旧的伪类， 如:first-line,:first-letter,:before,:after等等。因此对于css2之前已经有的伪元素两种写法的作用是一样的，但是为了兼容IE浏览器还是使用单冒号的写法。 opacity: 1;是为了修改FF的默认透明度导致颜色偏差。","tags":[{"name":"css","slug":"css","permalink":"http://blog.qianxiaoduan.com/tags/css/"}]},{"title":"HTML5新增表单验证整理","date":"2017-02-15T03:03:01.000Z","path":"2017/02/15/biaodan/","text":"HTML5新增语义input类型：email 定义用于 e-mail 地址的文本字段 tel 定义用于电话号码的文本字段。 url 定义用于 URL 的文本字段。 number 定义带有 spinner 控件的数字字段time 定义日期字段的时、分、秒（带有 time 控件） date 定义日期字段（带有 calendar 控件） datetime 定义日期字段（带有 calendar 和 time 控件） datetime-local 定义日期字段（带有 calendar 和 time 控件） month 定义日期字段的月（带有 calendar 控件） week 定义日期字段的周（带有 calendar 控件） range 定义带有 slider 控件的数字字段。 search 定义用于搜索的文本字段。 color 定义拾色器。 强制用户必须提交有效数据1&lt;input type=&quot;email&quot; name=&quot;email&quot; id=&quot;youremail&quot; required&gt; 使用min, max和step进行数字验证 当发现用户输入的数字大于max或小于min的值的时候，会返回一个错误提示。1&lt;input type=&quot;number&quot; name=&quot;age&quot; id=&quot;yourage&quot; min=&quot;18&quot; max=&quot;120&quot;&gt; step这个属性规定了用户只能按照等差数列的方式输入数字。例如给输入框添加step=“2”这个属性值，那么用户只能输入差值为2的倍数的数字。1&lt;input type=&quot;number&quot; name=&quot;&quot; id=&quot;&quot; min=&quot;2&quot; max=&quot;1024&quot; step=&quot;4&quot;&gt; 文本长度验证：maxlength maxlength属性让我们可以定义输入框的最大字符限制，在限定用户的输入文本长度的时候，也可以使用该属性。1&lt;textarea name=&quot;msg&quot; id=&quot;&quot; cols=&quot;25&quot; rows=&quot;4&quot; maxlength=&quot;500&quot;&gt;&lt;/textarea&gt; textarea元素，俗称“文本域”，或者“多行文本框”，其自带原生的HTML属性rows表示行的意思，可以改变textarea的可视区域高度，cols表示列，可以改变textarea的可视区域宽度。（兼容性差，推荐使用CSS控制宽度、高度） pattern：Regex验证 pattern这个属性允许我们在验证过程中使用 正则表达式，下面的例子需要用户输入最少8个字符的密码，而且字符串中必须含有至少一个字母以及至少一个数字：1&lt;input type=&quot;password&quot; name=&quot;&quot; id=&quot;&quot; required pattern=&quot;^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]&#123;8,&#125;$&quot;&gt;","tags":[{"name":"html","slug":"html","permalink":"http://blog.qianxiaoduan.com/tags/html/"}]},{"title":"页面滚动触发CSS3动画的简单实现","date":"2017-02-15T03:02:52.000Z","path":"2017/02/15/gundong/","text":"这篇教程将介绍如何在页面滚动时触发CSS3动画，这种效果使用JQuery和CSS就能做到。 实现原理为在页面加载时通过js给元素添加一个样式，当页面滚动到该元素位置时添加另外一个样式从而实现动画效果（此方法不兼容IE10以下浏览器）。 HTML首先写好HTML标签，给需要滚动时触发的元素添加ID。1&lt;div class=&quot;w-1000 pc-30&quot; id=&quot;jsn&quot;&gt; CSS在样式表中编写好动画样式： .t-3为页面加载时添加的样式，.t-3h为页面滚动到该元素位置时添加的样式。（样式使用CSS预处理器SASS书写，需了解SASS请点击这里）123@mixin hover($value:.2s)&#123;-webkit-transition: all $value;-o-transition: all $value;-moz-transition: all $value;transition: all $value;&#125;.t-3&#123;transform: translate(0, 200px);@include hover(.8s);opacity: 0;filter: alpha(opacity=0);&#125;.t-3h&#123;transform: translate(0, 0);opacity: 1;filter: alpha(opacity=100);&#125; JQuery判断元素滚动到页面底部的时候加载.t-3h样式。1234567891011var jsn=$(&apos;#jsn&apos;)；$(window).scroll(function() &#123; if ($(window).scrollTop() &gt; 0) &#123; jsn.addClass(&apos;t-3&apos;); &#125; if ($(window).scrollTop() &gt; $jsn.offset().top - $(window).height()) &#123; jsn.addClass(&apos;t-3h&apos;); &#125;else&#123; jsn.removeClass(&apos;t-3h&apos;); &#125; &#125;); ps：通过一些插件可以更简单的实现该类效果，如scrollReveal.js、wow.js等，该类插件将在后面介绍。","tags":[{"name":"css","slug":"css","permalink":"http://blog.qianxiaoduan.com/tags/css/"}]},{"title":"windows系统下远程连接服务器","date":"2017-02-15T03:02:43.000Z","path":"2017/02/15/server/","text":"点击左下角 开始/运行或者按 win+r输入mstsc， 点击确定出现如下界面： 点击显示选项展开详细信息： 在常规选项中输入计算机名和用户名，点击连接。 计算机名为服务器的公网IP，默认用户名为administrator。 输入服务器登录用户名密码即可成功连接远程服务器。","tags":[{"name":"前端开发","slug":"前端开发","permalink":"http://blog.qianxiaoduan.com/tags/前端开发/"}]},{"title":"JQuery常用代码段整理","date":"2017-02-15T02:56:46.000Z","path":"2017/02/15/jq/","text":"禁用页面右键菜单12345$(document).ready(function()&#123; $(document).bind(&quot;contextmenu&quot;,function(e)&#123; return false; &#125;);&#125;); 在新窗口打开页面12345 $(document).ready(function()&#123; $(&apos;a[href^=&quot;http://www.baidu.com&quot;]&apos;).attr(&quot;target&quot;,&quot;_blank&quot;);&#125;);//use&lt;a href=&quot;http://www.baidu.com&quot;&gt;&lt;/a&gt; 判断浏览器类型123456789101112131415161718192021222324252627282930 $(document).ready(function() &#123; //firefox 2 and above if($.browser.mozilla &amp;&amp; $.browser.version &gt; = &quot;1.8&quot;) &#123; //do something &#125; //safrri if($.browser.safari) &#123; //do something &#125; //chrome if($.browser.chrome) &#123; //do something &#125; //opera if($.browser.opera) &#123; //do something &#125; //ie6 and below if($.browser.msie &amp;&amp; $.browser.version &lt; 6) &#123; //do something &#125; //anything above ie6 if($.browser.msie &amp;&amp; $.browser.version &gt; 6) &#123; //do something &#125; //chrome if($.browser.) &#123; //do something &#125;&#125;); jQuery 从 1.9 版开始，移除了 $.browser 和 $.browser.version ， 取而代之的是 $.support 。1&lt;script src=”http://libs.baidu.com/jquery/1.8.3/jquery.min.js”&gt;&lt;/script&gt; 输入框文字获取和失去焦点12345678910111213$(document).ready(function() &#123;$(&quot;input.text1&quot;).val(&quot;Enter your search text here&quot;); textFill($(&apos;input.text1&apos;));&#125;); function textFill(input)&#123; //input focus text function var originalvalue = input.val(); input.focus( function()&#123; if( $.trim(input.val()) == originalvalue )&#123; input.val(&apos;&apos;); &#125; &#125;); input.blur( function()&#123; if( $.trim(input.val()) == &apos;&apos; )&#123; input.val(originalvalue); &#125; &#125;);&#125; 返回顶部滑动动画1234567$top.click(function() &#123; var speed = 300; //滑动的速度 $(&apos;body,html&apos;).animate(&#123; scrollTop: 0 &#125;, speed); return false; &#125;); 获取鼠标位置12345 $(document).ready(function() &#123; $(document).mousemove(function(e)&#123; $(&apos;#XY&apos;).html(&quot;X:&quot; + e.pageX + &quot;|Y:&quot; + e.pageY) &#125;);&#125;); 判断元素是否存在12345 $(document).ready(function() &#123; if((&quot;#id&quot;).length)&#123; //do something &#125;&#125;); 点击div跳转123456 $(&quot;div&quot;).click(function()&#123; window.location=$(this).find(&quot;a&quot;).attr(&quot;href&quot;); return false;&#125;);//use&lt;div&gt;&lt;a href=&quot;http://www.baidu.com&quot;&gt;&lt;/a&gt;&lt;/div&gt; 判断浏览器宽度添加不同样式12345678910 $(document).ready(function() &#123; function checkWindowSize()&#123; if ($(window).width() &gt; 1200) &#123; $(&apos;body&apos;).addClass(&apos;large&apos;); &#125; else&#123; $(&apos;body&apos;).removeClass(&apos;large&apos;); &#125; &#125; $(window).resize(checkWindowSize);&#125;); 回车提交表单1234567 $(document).ready(function() &#123; $(&quot;input&quot;).keyup(function(e)&#123; if(e.watch==&quot;13&quot;)&#123; alert(&quot;提交！&quot;) &#125; &#125;);&#125;); textarea高度自适应1&lt;textarea name=&quot;&quot; rows=&quot;&quot; cols=&quot;&quot; class=&quot;text5&quot; onpropertychange=&quot;this.style.height=this.scrollHeight+&apos;px&apos;;&quot; oninput=&quot;this.style.height=this.scrollHeight+&apos;px&apos;;&quot;&gt;&lt;/textarea&gt; 将一个元素的背景链接赋值到另一个元素上123var img1 = $(&quot;.banner&quot;).css(&quot;backgroundImage&quot;).replace(&apos; url(&apos;, &apos;&apos;).replace(&apos; )&apos;, &apos;&apos;);var img2 = &apos;background-image:&apos; + img1;$(&apos;.head&apos;).attr(&apos;style&apos;, img1).addClass(&apos;position&apos;);","tags":[{"name":"jquery","slug":"jquery","permalink":"http://blog.qianxiaoduan.com/tags/jquery/"}]},{"title":"Iconfont（阿里巴巴矢量图标库）- 前端开发使用教程","date":"2017-02-15T02:45:44.000Z","path":"2017/02/15/icon/","text":"Iconfont.cn是由阿里巴巴UX部门推出的矢量图标管理网站，也是国内首家推广Webfont形式图标的平台。网站涵盖了1000多个常用图标并还在持续更新中，Iconfont平台为用户提供在线图标搜索、图标分捡下载、在线储存、矢量格式转换、个人图标库管理及项目图标管理等基础功能。同时iconfont.cn平台作为矢量图标倡导者，积极在线分享矢量图标制作经验、前端应用说明，及应用中常见的一些问题。网站地址 Iconfont的优势： 可自由变化大小 可自由修改颜色（仅限于纯色） 可以添加一些视觉效果如：阴影、旋转、透明度 前端开发中可以从平台上下载到：ttf、woff、eot、svg等矢量格式的图标文件，应用到页面开发中去。 通过导航顶部搜索框搜索图标或从某个库中选择图标存入暂存库： 完成图标选择后，从暂存架中选择图标的获取模式：” 存储为项目” OR ” 下载至本地” 用户点击”下载至本地”，系统会将包含“ttf、woff、eot、svg”等文件的压缩包下载至用户电脑本地。 “存储为项目”是指将用户选择的图标存储到淘宝CDN上，可以在iconfont.cn个人图标管理&gt;项目图标管理中创建一个新项目或者存入历史记录，方便用户下次对项目图标的增加或删除； 在iconfont.css文件中获取前端应用代码：1234567891011121314151617@font-face &#123;font-family: &quot;iconfont&quot;; src: url(&apos;iconfont.eot?t=1474874755&apos;); /* IE9*/ src: url(&apos;iconfont.eot?t=1474874755#iefix&apos;) format(&apos;embedded-opentype&apos;), /* IE6-IE8 */ url(&apos;iconfont.woff?t=1474874755&apos;) format(&apos;woff&apos;), /* chrome, firefox */ url(&apos;iconfont.ttf?t=1474874755&apos;) format(&apos;truetype&apos;), /* chrome, firefox, opera, Safari, Android, iOS 4.2+*/ url(&apos;iconfont.svg?t=1474874755#iconfont&apos;) format(&apos;svg&apos;); /* iOS 4.1- */&#125; .iconfont &#123; font-family:&quot;iconfont&quot; !important; font-size:16px; font-style:normal; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; -moz-osx-font-smoothing: grayscale;&#125;.icon-mendian:before &#123; content: &quot;\\e682&quot;; &#125; 代码中字体文件默认与页面同目录，需重新指定字体文件路径。 获得图标对应的字体编码： 将图标字体应用于页面：1&lt;i class=&quot;iconfont&quot;&gt;&amp;#xe682;&lt;/i&gt; 使用i标签需添加display：block或display：inline-block属性。 关于火狐等浏览器.woff格式字体文件404报错报错的解决办法在iis下添加woff的mime类型即可，其值为application/x-font-woff","tags":[{"name":"css","slug":"css","permalink":"http://blog.qianxiaoduan.com/tags/css/"},{"name":"iocnfont","slug":"iocnfont","permalink":"http://blog.qianxiaoduan.com/tags/iocnfont/"}]},{"title":"前端性能优化","date":"2017-02-15T02:45:35.000Z","path":"2017/02/15/youhua/","text":"前端性能优化的目的从用户角度而言，优化能够让页面加载得更快、对用户的操作响应得更及时，能够给用户提供更为友好的体验。 从服务商角度而言，优化能够减少页面请求数、或者减小请求所占带宽，能够节省可观的资源。 前端性能优化的方法页面部分 减少Http请求数量 减少DNS查询次数 尽量避免ifreme框架的使用 避免网站出现404 JavaScript 将脚本置于底部 使用外部JavaScript 合并脚本 JavaScript压缩 CSS 样式表置于页面顶部 使用link代替@import 避免使用表达式 图片 压缩图像大小 合并 CSS图片 合理使用字体图标 对图片进行懒加载处理 服务器端 使用CDN 开启Gzip压缩 避免图片空连接 减少跳转 避免重复请求","tags":[{"name":"前端开发","slug":"前端开发","permalink":"http://blog.qianxiaoduan.com/tags/前端开发/"}]},{"title":"移动端布局之rem","date":"2017-02-15T02:37:09.000Z","path":"2017/02/15/rem/","text":"如今市面上移动设备的分辨率各种各样，网页设计中常用的单位px在移动端布局中显得力不从心，css3的出现了一个带来了一个新的css单位——rem，rem是解决移动端分辨率适配问题比较完美的方案。 什么是rem？rem（font size of the root element）是指相对于根元素的字体大小的单位。简单的说它就是一个相对单位。看到rem大家 一定会想起em单位，em（font size of the element）是指相对于父元素的字体大小的单位。它们之间其实很相似，只不过一个计算 的规则是依赖根元素一个是依赖父元素计算。 rem于em其实有点类似，不同的是rem是相对于根元素的字体大小的单位，em指相对于父元素的字体大小的单位。 rem的使用rem相对于根元素的font-size来做计算,举个例子：设置根元素的font-size：14px，div宽高为10rem，则得到一个宽高各为140px的div。12html&#123;font-size: 14px;&#125;div&#123;width: 10rem;height: 10rem;background: #ff6700;&#125; 使用rem布局需要在不同的分辩率下给根元素的font-size不同的值，具体的实现方式有以下两种： 1.使用媒介查询123456789101112@media only screen and (max-width: 320px)&#123;html&#123;font-size: 9px;&#125; &#125;@media only screen and (min-width: 320px) and (max-width: 352px)&#123;html&#123;font-size: 10px;&#125; &#125;@media only screen and (min-width: 352px) and (max-width: 384px)&#123;html&#123;font-size: 11px;&#125; &#125;@media only screen and (min-width: 384px) and (max-width: 416px)&#123;html&#123;font-size: 12px;&#125; &#125;@media only screen and (min-width: 416px) and (max-width: 448px)&#123;html&#123;font-size: 13px;&#125; &#125;@media only screen and (min-width: 448px) and (max-width: 480px)&#123;html&#123;font-size: 14px;&#125; &#125;@media only screen and (min-width: 480px) and (max-width: 512px)&#123;html&#123;font-size: 15px;&#125; &#125;@media only screen and (min-width: 512px) and (max-width: 544px)&#123;html&#123;font-size: 16px;&#125; &#125;@media only screen and (min-width: 544px) and (max-width: 576px)&#123;html&#123;font-size: 17px;&#125; &#125;@media only screen and (min-width: 576px) and (max-width: 608px)&#123;html&#123;font-size: 18px;&#125; &#125;@media only screen and (min-width: 608px) and (max-width: 640px)&#123;html&#123;font-size: 19px;&#125; &#125;@media only screen and (min-width: 640px)&#123;html&#123;font-size: 20px;&#125; &#125; 2.通过js计算1234567891011 !(function(doc, win) &#123; var docEle = doc.documentElement, event = &quot;onorientationchange&quot; in window ? &quot;orientationchange&quot; : &quot;resize&quot;, fn = function() &#123; var width = docEle.clientWidth; width&lt;640?docEle.style.fontSize = 10 * (width / 320) + &quot;px&quot;:docEle.style.fontSize = 16 + &quot;px&quot;; &#125;; win.addEventListener(event, fn, false); doc.addEventListener(&quot;DOMContentLoaded&quot;, fn, false);&#125;(document, window)); 需注意的是使用rem布局需在页面头部定义mate标签禁止页面缩放：1&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0,maximum-scale=1.0,user-scalable=0&quot;/&gt; Viewport语法 width:控制viewport的大小，一般情况下指定为device-width(单位为缩放为100%的CSS像素),也可以指定一个固定的值。 height:和width相应,指定高度。 initial-scal:初始缩放比例,页面第一次load的时候的缩放比例。 maximum-scale:允许用户缩放到的最大比例。 minimum-scale:允许用户缩放到的最小比例。 user-scalable:用户是否可以手动缩放。 rem使用中遇到的问题1.同时使用了js判断与媒介查询判断在页面载入时可能出现页面重新布局，原因是媒介查询根据一定的像素范围给定字体的大小值，例如：1@media only screen and (min-width: 608px) and (max-width: 640px)&#123;html&#123;font-size: 19px;&#125; &#125; 而js在不同像素下计算字体的大小是不一样的可能会出现带小数位的字体大小，同时使用就会出现页面载入时页面重新布局的现象，建议js判断与媒介查询选择一种使用。 2.rem布局做出来的页面效果与效果图有些许偏差 不同浏览器计算rem转换为px数值时，对于小数点后的数值的处理是有所偏差，rem计算偏差的根源是浏览器内核数字类型的区别，如果浏览器的内核数字类型是float类型，能够较好地支持有小数点的数值。当浏览器内核数字类型是int类型，不支持小数点，会对数字进行四舍五入，这样就会有偏差。如果元素越大偏差得就越明显。 3.雪碧图定位问题 rem的换算成px的尺寸非严格精确，如果雪碧图图标之间的距离过小，就可能导致图标过界，因此图与图之间的间隙需要留相应大一点。 rem兼容性 PC端如需兼容ie8还是用px比较好~ 移动端设定宽度为rem浮动时，在谷歌、UC下会出现问题，宽度使用百分比。","tags":[{"name":"javascript","slug":"javascript","permalink":"http://blog.qianxiaoduan.com/tags/javascript/"},{"name":"css","slug":"css","permalink":"http://blog.qianxiaoduan.com/tags/css/"}]},{"title":"css清除浮动较常用的三种方法","date":"2017-02-15T02:36:59.000Z","path":"2017/02/15/clear/","text":"在页面布局中浮动是一个很常用的属性，但使用浮动也会使元素脱离正常文档流造成父级高度的塌陷，因此随时清除浮动是css书写时的一个良好的习惯，以下介绍清除浮动的几种常用的方法： 1.使用空标签清除浮动。实现方法为在父级元素内所有的浮动元素后添加一个空元素12345&lt;div class=&quot;f&quot;&gt; &lt;div class=&quot;a&quot;&gt;&lt;/div&gt; &lt;div class=&quot;b&quot;&gt;&lt;/div&gt; &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;&lt;/div&gt; 其css样式为1234.f&#123;background: #00f;padding: 10px;width: 400px;&#125;.a&#123;width: 100px;height: 50px;float: left;background: #f00;margin: 10px;&#125;.b&#123;width: 150px;height: 100px;float: left;background: #0f0;margin: 10px;&#125;.clear&#123;clear: both;&#125; 此方法的弊端在于为页面增加了无意义的结构元素。 2.使用overflow属性。通过为父级元素定义overflow属性来清除浮动。 其css样式为123.f&#123;background: #00f;padding: 10px;width: 400px;overflow: hidden;&#125;.a&#123;width: 100px;height: 50px;float: left;background: #f00;margin: 10px;&#125;.b&#123;width: 150px;height: 100px;float: left;background: #0f0;margin: 10px;&#125; 此方法有效地解决了通过空标签元素清除浮动而使文档中出现多余空元素的弊端。 3.使用伪元素清楚浮动。使用:after伪元素来在元素内部插入两个元素块，从面达到清除浮动的效果。其实现原理类似于clear:both方法，只是区别在于:clear在文档中插入一个div.clear标签，而此方法为使用其伪类在元素内部增加一个类似于div.clear的效果。 其css样式为12.f&#123;background: #00f;padding: 10px;width: 400px;&#125;.f:after&#123;display: block;content: &quot;&quot;;clear: both;&#125; 以上为css清除浮动的三种较常用的方法。","tags":[{"name":"css","slug":"css","permalink":"http://blog.qianxiaoduan.com/tags/css/"}]},{"title":"javascript判断移动端实现自动跳转的方法","date":"2017-02-15T02:36:32.000Z","path":"2017/02/15/tiaozhuan/","text":"在网站建设的时候，因为一些原因我们可能在pc端和移动端做出两个不同的网站版本，但又不想在用户从移动端的搜索结果进入到pc端的页面，因此在用户使用手机等移动端工具打开pc页面时跳转到移动端的页面。实现方法为在页面的头部加入以下代码：12345678910111213&lt;script&gt; /* * pc 跳转到 phone */ try &#123; var urlhash = window.location.hash; if (!urlhash.match(&quot;fromapp&quot;)) &#123; if ((navigator.userAgent.match(/(iPhone|iPod|Android|ios|iPad)/i))) &#123; window.location = &quot;/mobile&quot;; &#125; &#125; &#125; catch (err) &#123;&#125;&lt;/script&gt; 1window.location = &quot;/mobile&quot;; 这句为移动端首页所在的路径。","tags":[{"name":"javascript","slug":"javascript","permalink":"http://blog.qianxiaoduan.com/tags/javascript/"}]},{"title":"css预处理器 – sass使用入门指南","date":"2017-02-15T02:20:12.000Z","path":"2017/02/15/3/","text":"需要了解sass安装的朋友点击css预处理器 – sass安装指南（hbuilder） sass是一种对css的一种提升，可以通过编译生成浏览器能识别的css文件。sass技术的文件的后缀名有两种形式：.sass和.scss。这两种的区别在于.sass文件对代码的排版有着非常严格的要求，而且没有大括号，没有分号。一个style.scss文件代码如下：123456.author-n&#123;color: #999;margin-top: 10px;overflow: hidden;text-align: center; span&#123;padding-right: 8px;font-size: 13px;&#125; a&#123;color: #888;margin-right: 8px; &amp;:hover&#123;color: $color;&#125; &#125;&#125; 编译出来的style.css文件中的内容为：1234.author-n &#123; color: #999; margin-top: 10px; overflow: hidden; text-align: center; &#125;.author-n span &#123; padding-right: 8px; font-size: 13px; &#125;.author-n a &#123; color: #888; margin-right: 8px; &#125;.author-n a:hover &#123; color: #40a6eb; &#125; 但是将后缀改成.sass就不能通过编译了。首先.sass不要大括号，其次不需要分号，还有行首空格问题，比如第一个元素的属性空2个空格就不能通过编译。因此一般推荐使用.scss后缀。 变量sass中可以定义以$开头的变量，方便统一修改和维护：12$color:#40a6e;div&#123;color:$color;&#125; 编译结果为：1div &#123; color: #40a6eb;&#125; 嵌套sass中允许选择器嵌套：123456.author-n&#123;color: #999;margin-top: 10px;overflow: hidden;text-align: center; span&#123;padding-right: 8px;font-size: 13px;&#125; a&#123;color: #888;margin-right: 8px; &amp;:hover&#123;color: $color;&#125; &#125;&#125; 编译结果为：1234.author-n &#123; color: #999; margin-top: 10px; overflow: hidden; text-align: center; &#125;.author-n span &#123; padding-right: 8px; font-size: 13px; &#125;.author-n a &#123; color: #888; margin-right: 8px; &#125;.author-n a:hover &#123; color: #40a6eb; &#125; 使用&amp;引用父元素&amp;后需加： 计算sass中允许使用计算：12$width:1400px;div&#123;width: $width - 400px;&#125; 编译结果为：1div &#123; width: 1000px; &#125; 注意运算符两边的空格 mixin@mixin定义可重用的代码块。12@mixin a&#123;width: 200px;height: 200px;&#125;div&#123;@include a&#125; 编译结果为：1div &#123; width: 200px; height: 200px; &#125; 使用@include命令调用定义的代码块。 导入通过@import命令，可导入外部文件。1@import &quot;Globalstyle.scss&quot;; 自定义函数1@mixin hover($value:.2s)&#123;-webkit-transition: all $value;-o-transition: all $value;-moz-transition: all $value;transition: all $value;&#125; 注释 sass共有三种注释风格。 重要注释 /! comment / ，会保留到编译后的文件。 单行注释 // comment，只保留在sass源文件中，编译后被省略。 多行注释 / comment/，只保留在sass源文件中，编译后被省略。 需注意当出现中文注释的时候sass文件头部需定义编码格式1@charset &quot;utf-8&quot;;","tags":[{"name":"sass","slug":"sass","permalink":"http://blog.qianxiaoduan.com/tags/sass/"}]},{"title":"css预处理器 – sass安装指南（hbuilder）","date":"2017-02-15T02:20:06.000Z","path":"2017/02/15/2/","text":"什么是css预处理器？css预处理器定义了一种新的语言将css作为目标生成文件，然后开发者就只要使用这种语言进行编码工作了。预处理器通常可以实现浏览器兼容，变量，结构体等功能，代码更加简洁易于维护。目前比较流行的两种是sass和less，其他的还有stylus、turbine、swithch css、css cacheer、dt css等。 通俗的说，“css 预处理器用一种专门的编程语言，进行 Web 页面样式设计，然后再编译成正常的 css 文件，以供项目使用。css 预处理器为 css 增加一些编程的特性，无需考虑浏览器的兼容性问题”，例如你可以在 css 中使用变量、简单的逻辑程序、函数等等在编程语言中的一些基本特性，可以让你的 css 更加简洁、适应性更强、可读性更佳，更易于代码的维护等诸多好处。 sass用法指南sass是一种css的开发工具，提供了许多便利的写法，大大节省了设计者的时间，使得css的开发，变得简单和可维护。 ruby的安装： sass依赖于ruby环境，因此在安装sass之前需要安装ruby。需在官网下载ruby。 在安装的时候，请勾选Add Ruby executables to your PATH这个选项，添加环境变量，不然以后使用编译软件的时候会提示找不到ruby环境。 sass的安装： 安装完ruby之后，在开始菜单中找到安装好的的ruby，打开Start Command Prompt with Ruby， 接着在命令行输入下面的命令：1gem install sass 等待安装完成。 完成后输入下面的命令查看sass的版本号：1sass -v 编辑器hbuilder中sass的设置： 选择 工具/预编译器设置/.sass，.scss 右侧选择编辑选项，触发命令地址为ruby安装路径下bin文件夹中的sass.bat文件，命令参数如下：1--no-cache %FileName% %FileBaseName%.css --style compressed 环境变量%FileName%：调用预编译器时执行保存命令的文档的文件名，如style.scss。 环境变量%FileBaseName%：调用预编译器时执行保存命令的文档的不带后缀的文件名，如style。 –style compact：编译风格，sass提供四种编译风格，如下： nested：嵌套缩进的css代码，它是默认值。 expanded：没有缩进的、扩展的css代码。 compact：简洁格式的css代码。 compressed：压缩后的css代码。 项目中一般选择编译为压缩后的css代码。 上面命令参数的意思为：在sass文件所在的目录生成一个名为style的经过压缩的css文件。 至此，hbuilder下sass的安装就完成了。 需要了解sass用法的朋友点击css预处理器 – sass使用入门指南","tags":[{"name":"sass","slug":"sass","permalink":"http://blog.qianxiaoduan.com/tags/sass/"}]},{"title":"WordPress自带头像加载失败解决办法","date":"2017-02-15T02:17:27.000Z","path":"2017/02/15/1/","text":"wordpress的头像采用Gravatar网站链接的头像。作为用户，需要 在Gravatar网站注册一个用户，在那个网站上传自己的头像，然后在wordpress里通过电子邮件的方式调用头像。但是现在Gravatar服务器被全面和谐，导致wordpress头像不显示，同时也导致wordpress网站的速度被拖慢。 解决办法: 安装WP User Avatar插件，可以在wordpress后台的 插件/安装插件 页面搜索安装，安装完成后可以在左侧菜单中找到选项，点击界面及设置内容如下： 设置完成后在界面右上角选择 编辑我的个人资料 中设置自己的头像即可。","tags":[{"name":"wordpress","slug":"wordpress","permalink":"http://blog.qianxiaoduan.com/tags/wordpress/"}]},{"title":"分布式版本控制系统Git（windows系统）","date":"2017-02-14T09:29:07.000Z","path":"2017/02/14/git/","text":"安装Gitmsysgit是Windows版的Git，下载地址。 安装完毕运行“Git”-&gt;“Git Bash”，在命令行输入 12$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 完成安装。 创建版本库1234$ mkdir git$ cd E:\\git$ pwd/e/git 创建Git管理仓库12$ git initInitialized empty Git repository in E:/git/.git/ 目录默认隐藏，通过ls -ah命令可以看见。 把文件添加到仓库1$ git add index.asp 添加目录下所有文件到仓库1$ git add . 忽略特殊文件： 在Git工作区的根目录下创建一个.gitignore文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。 文件提交到仓库1234$ git commit -m &quot;提交说明&quot;[master (root-commit) 96f2439] index.asp 1 file changed, 198 insertions(+) create mode 100644 index.asp commit可以一次提交很多文件，所以可以多次add不同的文件。123$ git add file1.txt$ git add file2.txt file3.txt$ git commit -m &quot;提交说明&quot; git status命令可以查看仓库当前的状态。123$ git statusOn branch masternothing to commit, working tree clean Git告诉我们当前没有需要提交的修改，而且，工作目录是干净的。 版本回退使用git log命令查看历史记录123456789101112131415161718$ git logcommit 17a86ced31dd11a804f895245f4ea76e4208e399Author: yzb &lt;1047576335@qq.com&gt;Date: Tue Sep 13 10:18:03 2016 +0800 添加所有文件 commit 7e9d7598546a6ac4b6ac41fbdf4c7933005cb7d2Author: yzb &lt;1047576335@qq.com&gt;Date: Tue Sep 13 09:28:47 2016 +0800 添加所有文件 commit 96f2439b5844d2c9cb7636a46a4720477dd84bfaAuthor: yzb &lt;1047576335@qq.com&gt;Date: Tue Sep 13 09:24:32 2016 +0800 index.asp 回退到上一个版本“add distributed”，使用git reset命令12$ git reset --hard HEAD^HEAD is now at 7e9d759 添加所有文件 通过版本号回退到任意版本12$ git reset --hard 96f24HEAD is now at 96f2439 index.asp git reflog用来记录每次操作123456$ git reflog96f2439 HEAD@&#123;0&#125;: reset: moving to 96f247e9d759 HEAD@&#123;1&#125;: reset: moving to HEAD^17a86ce HEAD@&#123;2&#125;: commit: 添加所有文件7e9d759 HEAD@&#123;3&#125;: commit: 添加所有文件96f2439 HEAD@&#123;4&#125;: commit (initial): index.asp 丢弃工作区的修改时，用命令git checkout – file 丢弃暂存区修改时，分两步，第一步用命令git reset HEAD file回到工作区，再执行上面的命令。 删除文件删除文件使用直接删除或者rm命令。1$ rm index.asp 删除文件夹及其下的所有文件1$ git rm ss-tab -r -f 使用git status命令查看哪些文件被删除 确认删除该文件，使用命令git rm删掉，并git commit123456$ git rm index.asprm &apos;index.asp&apos; $ git commit -m &quot;remove index.asp&quot;[master ff03b82] remove index.asp 1 file changed, 198 deletions(-) delete mode 100644 index.asp 恢复删除使用git checkout1$ git checkout -- index.as 创建SSH Key注册GitHub账号，在git bath中输入如下命令：1$ ssh-keygen -t rsa -C &quot;1047576335@qq.com 在/c/Users/Administrator/.ssh/路径下找到id_rsa和id_rsa.pub两个文件，登录Github，点击右上角Settings。 选择SSH and GPG keys，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容。 添加远程库右上角点击“New repository”按钮，创建一个新的仓库： 在Repository name填入项目名称，其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库 把本地仓库的内容推送到GitHub仓库本地仓库下运行命令：1$ git remote add origin git@github.com:bin248163/test.git 输入上述命令报错： 输入如下命令即可：1$ git remote rm origin 把本地库的所有内容推送到远程库上：1$ git push -u origin master 把本地的最新修改推送至GitHub：1$ git push origin master 从GitHub克隆库到本地本地运行git clone命令：123456$ git clone git@github.com:bin248163/Rolling-load.gitCloning into &apos;Rolling-load&apos;...remote: Counting objects: 25, done.remote: Compressing objects: 100% (24/24), done.remote: Total 25 (delta 0), reused 25 (delta 0), pack-reused 0Receiving objects: 100% (25/25), 2.59 MiB | 55.00 KiB/s, done.","tags":[{"name":"git","slug":"git","permalink":"http://blog.qianxiaoduan.com/tags/git/"}]},{"title":"github中README.md文件的编写(Markdown)","date":"2017-02-14T01:18:37.000Z","path":"2017/02/14/markdown/","text":"刚开始尝试使用github，创建新项目的时候其中的README.md文件都是默认的，即使改动也只会添加文本，翻看别人的项目时发现其中的README.md不仅有文字还有链接、图片之类的，搜索之后发现github上的README.md文件是使用的Markdown语言编写，下面整理些Markdown语言的常用语法。 语法宗旨Markdown 的目标是实现「易读易写」。 可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括Setext、atx、Textil、reStructuredText、Grutatex 和EtText，而最大灵感来源其实是纯文本电子邮件的格式。 总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像强调。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。 编辑器主流编辑器都可以编辑Markdowm文件 语法1.标题 标题使用“#”来标识h1~h6：123456# h1## h2### h3#### h4##### h5###### h6 2.图片 图片的格式如下：1![替代文字](https://raw.githubusercontent.com/bin248163/qd/master/images/home.jpg) 方括号里面放上图片的替代文字，圆括号里面放上图片的网址，图片引用最好为项目地址，外部图片地址会有显示不全的现象。 3.链接 外部链接的格式如下： 1[My blog](http://blog.qianxiaoduan.com/) 方括号里面放上链接文字，圆括号里面放上链接的地址。 相对路径的格式：1My blog [About](/index.php) 4.列表 Markdown 支持有序列表和无序列表。 无序列表使用星号、加号或是减号作为列表标记：123* Red* Green* Blue 等同于123+ Red+ Green+ Blue 和123- Red- Green- Blue 有序列表则使用数字接着一个英文句点：1231. Red2. Green3. Blue 5.分割线 在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。可以在星号或是减号中间插入任意数量的空格。下面每种写法都可以建立分隔线：12345* * *********- - ---------- 6.引用 Markdown 通过“&gt;”来引用内容，可以在引用开头加一个，也可以在引用每一行的前面都加一个，引用也可以嵌套，示例如下：12&gt; 这是一段引用&gt; &gt; 这是一段二级引用 7.换行 一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进，这样会被认为是换行。 8.代码 如果要标记一小段行内代码，可以用反引号把它包起来（`），示例如下：1github中`README.md`文件的编写 常用的应该就这些了~~~","tags":[{"name":"hexo","slug":"hexo","permalink":"http://blog.qianxiaoduan.com/tags/hexo/"},{"name":"git","slug":"git","permalink":"http://blog.qianxiaoduan.com/tags/git/"}]},{"title":"使用HEXO+Github搭建属于自己的博客","date":"2017-02-13T02:48:02.000Z","path":"2017/02/13/hexo1/","text":"工作以后学的东西多了，接触的东西多了，才发现做笔记是一件很重要的事情，做笔记可以将自己的想法、思路写下来，方便以后查阅，做笔记、写博客可以让自己学会总结、学会分享，开始使用wordpress来搭建博客，乐此不疲的搞了段时间之后发现太麻烦了，后来开始使用github，接触到使用来搭建博客的方法，而且使用github作为服务器这样还省去了租用服务器的费用，下面是详细的制作过程： GitHub Pages是什么？GitHub Pages本用于介绍托管在GitHub的项目， 不过，由于他的空间免费稳定，用来做搭建一个博客再好不过了。github Pages可以被认为是用户编写的、托管在github上的静态网页。 安装软件Node.jsGit(windows版本) 安装和配置Hexo打开GitBash，全局安装Hexo 1$ npm install -g hexo 新建一个文件夹来放置博客所需要的所有文件(假设文件路径为E:/blog)， 12$ cd E:/blog$ hexo init Hexo随后会自动在目标文件夹建立网站所需要的所有文件,然后在当前路径下执行如下步骤： 生成静态页面（g为generate缩写） 1$ hexo g 启动本地预览（s为server缩写）1$ hexo s 浏览器输入localhost:4000如果配置正确即可看到效果 博客主题的选择知乎：有哪些好看的 Hexo 主题？ 选择需要的主题下载至博客根目录themes文件夹下 启用主题修改博客跟目录下的config.yml配置文件中的theme属性，将其设置为主题文件夹名称 更新主题：1$ cd themes/主题文件夹名称 查看预览12$ hexo g$ hexo s 配置Github新建一个仓库，仓库名要和你的Github账号对应 打开根目录下_config.yml文件，更改最底部的deploy配置1234deploy: type: git repo: http://github.com/bin248163/bin248163.github.io.gitbranch: master repo行需要替换成你自己的仓库路径，保存之后运行如下命令：12$ npm install hexo-deployer-git --save$ hexo deploy(可以缩写成d) 至此Hexo已与github关联好，在浏览器输入username.github.io/就可以浏览了 设置独立域名域名管理面板中添加 CNAME记录解析到username.github.io 在source文件夹下新建一个名为CNAME的无后缀文件，写入需要绑定的独立域名hexo d -g即可","tags":[{"name":"hexo","slug":"hexo","permalink":"http://blog.qianxiaoduan.com/tags/hexo/"},{"name":"git","slug":"git","permalink":"http://blog.qianxiaoduan.com/tags/git/"}]}]