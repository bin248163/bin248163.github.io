[{"title":"markdown","date":"2017-02-14T01:18:37.000Z","path":"2017/02/14/markdown/","text":"刚开始尝试使用github，创建新项目的时候其中的README.md文件都是默认的，即使改动也只会添加文本，翻看别人的项目时发现其中的README.md不仅有文字还有链接、图片之类的，搜索之后发现github上的README.md文件是使用的Markdown语言编写，下面整理些Markdown语言的常用语法。 语法宗旨Markdown 的目标是实现「易读易写」。 可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括Setext、atx、Textil、reStructuredText、Grutatex 和EtText，而最大灵感来源其实是纯文本电子邮件的格式。 总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像强调。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。 编辑器主流编辑器都可以编辑Markdowm文件 语法1.标题 标题使用“#”来标识h1~h6：123456# h1## h2### h3#### h4##### h5###### h6 2.图片 图片的格式如下：1![替代文字](https://raw.githubusercontent.com/bin248163/qd/master/images/home.jpg) 方括号里面放上图片的替代文字，圆括号里面放上图片的网址，图片引用最好为项目地址，外部图片地址会有显示不全的现象。 3.链接 外部链接的格式如下： 1[My blog](http://blog.qianxiaoduan.com/) 方括号里面放上链接文字，圆括号里面放上链接的地址。 相对路径的格式：1My blog [About](/index.php) 4.列表 Markdown 支持有序列表和无序列表。 无序列表使用星号、加号或是减号作为列表标记：123* Red* Green* Blue 等同于123+ Red+ Green+ Blue 和123- Red- Green- Blue 有序列表则使用数字接着一个英文句点：1231. Red2. Green3. Blue 5.分割线 在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。可以在星号或是减号中间插入任意数量的空格。下面每种写法都可以建立分隔线：12345* * *********- - ---------- 6.引用 Markdown 通过“&gt;”来引用内容，可以在引用开头加一个，也可以在引用每一行的前面都加一个，引用也可以嵌套，示例如下：12&gt; 这是一段引用&gt; &gt; 这是一段二级引用 7.换行 一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进，这样会被认为是换行。 8.代码 如果要标记一小段行内代码，可以用反引号把它包起来（`），示例如下：1github中`README.md`文件的编写 常用的应该就这些了~~~","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"}]},{"title":"使用HEXO+Github搭建属于自己的博客","date":"2017-02-13T02:48:02.000Z","path":"2017/02/13/hexo1/","text":"工作以后学的东西多了，接触的东西多了，才发现做笔记是一件很重要的事情，做笔记可以将自己的想法、思路写下来，方便以后查阅，做笔记、写博客可以让自己学会总结、学会分享，开始使用wordpress来搭建博客，乐此不疲的搞了段时间之后发现太麻烦了，后来开始使用github，接触到使用来搭建博客的方法，而且使用github作为服务器这样还省去了租用服务器的费用，下面是详细的制作过程： GitHub Pages是什么？GitHub Pages本用于介绍托管在GitHub的项目， 不过，由于他的空间免费稳定，用来做搭建一个博客再好不过了。github Pages可以被认为是用户编写的、托管在github上的静态网页。 安装软件Node.jsGit(windows版本) 安装和配置Hexo打开GitBash，全局安装Hexo 1$ npm install -g hexo 新建一个文件夹来放置博客所需要的所有文件(假设文件路径为E:/blog)， 12$ cd E:/blog$ hexo init Hexo随后会自动在目标文件夹建立网站所需要的所有文件,然后在当前路径下执行如下步骤： 生成静态页面（g为generate缩写） 1$ hexo g 启动本地预览（s为server缩写）1$ hexo s 浏览器输入localhost:4000如果配置正确即可看到效果 博客主题的选择知乎：有哪些好看的 Hexo 主题？ 选择需要的主题下载至博客根目录themes文件夹下 启用主题修改博客跟目录下的config.yml配置文件中的theme属性，将其设置为主题文件夹名称 更新主题：1$ cd themes/主题文件夹名称 查看预览12$ hexo g$ hexo s 配置Github新建一个仓库，仓库名要和你的Github账号对应 打开根目录下_config.yml文件，更改最底部的deploy配置1234deploy: type: git repo: http://github.com/bin248163/bin248163.github.io.gitbranch: master repo行需要替换成你自己的仓库路径，保存之后运行如下命令：12$ npm install hexo-deployer-git --save$ hexo deploy(可以缩写成d) 至此Hexo已与github关联好，在浏览器输入username.github.io/就可以浏览了","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"}]},{"title":"Hello World","date":"2017-02-13T01:31:31.437Z","path":"2017/02/13/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]